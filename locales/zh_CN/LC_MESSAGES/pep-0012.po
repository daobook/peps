# SOME DESCRIPTIVE TITLE.
# Copyright (C)
# This file is distributed under the same license as the PEPs package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2021.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PEPs \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-01-31 09:39+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.10.3\n"

#: ../../pep-0012.rst
msgid "Author"
msgstr ""

#: ../../pep-0012.rst:3
msgid ""
"David Goodger <goodger@python.org>, Barry Warsaw <barry@python.org>, "
"Brett Cannon <brett@python.org>"
msgstr ""

#: ../../pep-0012.rst
msgid "Status"
msgstr ""

#: ../../pep-0012.rst:6
msgid "Active"
msgstr ""

#: ../../pep-0012.rst
msgid "Type"
msgstr ""

#: ../../pep-0012.rst:7
msgid "Process"
msgstr ""

#: ../../pep-0012.rst
msgid "Created"
msgstr ""

#: ../../pep-0012.rst:9
msgid "05-Aug-2002"
msgstr ""

#: ../../pep-0012.rst
msgid "Post-History"
msgstr ""

#: ../../pep-0012.rst:10
msgid ""
"`30-Aug-2002 <https://mail.python.org/archives/list/python-"
"dev@python.org/thread/KX3AS7QAY26QH3WIUAEOCCNXQ4V2TGGV/>`__"
msgstr ""

#: ../../pep-0012.rst:16
#, fuzzy
msgid ""
"For those who have written a PEP before, there is a template_ (which is "
"included as a file in the `PEPs repository`_)."
msgstr "对于那些以前写过 PEP 的人来说，有一个模板_"

#: ../../pep-0012.rst:20
msgid "Abstract"
msgstr "摘要"

#: ../../pep-0012.rst:22
#, fuzzy
msgid ""
"This PEP provides a boilerplate or sample template for creating your own "
"reStructuredText PEPs.  In conjunction with the content guidelines in "
":pep:`1`, this should make it easy for you to conform your own PEPs to "
"the format outlined below."
msgstr ""
"本 PEP 为创建你自己的 reStructuredText PEP 提供了一个模板或示例模板。结合 PEP1 [1]_ "
"中的内容指南，这应该能让你很容易地使自己的 PEP 符合下面列出的格式。"

#: ../../pep-0012.rst:27
msgid ""
"Note: if you are reading this PEP via the web, you should first grab the "
"text (reStructuredText) source of this PEP in order to complete the steps"
" below.  **DO NOT USE THE HTML FILE AS YOUR TEMPLATE!**"
msgstr ""
"注意：如果你通过网络阅读本 PEP，你应该首先抓取本 PEP 的文本（reStructuredText）源，以便完成以下步骤。 **不要使用 "
"html 文件作为你的模板！**"

#: ../../pep-0012.rst:31
#, fuzzy
msgid ""
"The source for this (or any) PEP can be found in the `PEPs repository "
"<https://github.com/python/peps/>`_, as well as via a link at the bottom "
"of each PEP."
msgstr "这个（或任何）PEP 的来源可以在 PEPs 库中找到，可以在网上查看：https://github.com/python/peps/ 。"

#: ../../pep-0012.rst:37
msgid "Rationale"
msgstr "理论依据"

#: ../../pep-0012.rst:39
msgid ""
"If you intend to submit a PEP, you MUST use this template, in conjunction"
" with the format guidelines below, to ensure that your PEP submission "
"won't get automatically rejected because of form."
msgstr "如果你打算提交 PEP，你必须使用这个模板，并结合下面的格式指南，以确保你提交的 PEP 不会因为形式而被自动拒绝。"

#: ../../pep-0012.rst:43
msgid ""
"ReStructuredText provides PEP authors with useful functionality and "
"expressivity, while maintaining easy readability in the source text. The "
"processed HTML form makes the functionality accessible to readers: live "
"hyperlinks, styled text, tables, images, and automatic tables of "
"contents, among other advantages."
msgstr ""
"ReStructuredText为PEP作者提供了有用的功能和表现力，同时保持了源文本的易读性。经过处理的 HTML "
"形式使读者可以使用这些功能：实时超链接、风格化文本、表格、图像和自动目录等优点。"

#: ../../pep-0012.rst:51
msgid "How to Use This Template"
msgstr "如何使用此模板"

#: ../../pep-0012.rst:53
#, fuzzy
msgid ""
"To use this template you must first decide whether your PEP is going to "
"be an Informational or Standards Track PEP.  Most PEPs are Standards "
"Track because they propose a new feature for the Python language or "
"standard library.  When in doubt, read :pep:`1` for details, or open a "
"tracker issue on the PEPs repo to ask for assistance."
msgstr ""
"要使用这个模板，你必须首先决定你的 PEP 是一个信息性的还是标准追踪性的 PEP。大多数 PEP 是标准追踪的，因为它们为 Python "
"语言或标准库提出了一个新特性。如果有疑问，请阅读 PEP 1 以了解细节，或者在 PEPs repo 上开一个跟踪问题以寻求帮助。"

#: ../../pep-0012.rst:59
msgid ""
"Once you've decided which type of PEP yours is going to be, follow the "
"directions below."
msgstr "一旦你决定你的PEP是哪种类型，就按照下面的指示去做。"

#: ../../pep-0012.rst:62
msgid ""
"Make a copy of this file (the ``.rst`` file, **not** the HTML!) and "
"perform the following edits. Name the new file ``pep-9999.rst`` if you "
"don't yet have a PEP number assignment, or ``pep-NNNN.rst`` if you do. "
"Those with push permissions are welcome to claim the next available "
"number (ignoring the special blocks 3000 and 8000, and a handful of "
"special allocations - currently 666, 754, and 801) and push it directly."
msgstr ""
"复制这个文件（是 ``.rst`` 文件，**不** 是 HTML！）并进行以下编辑。如果你还没有 PEP 号码分配，将新文件命名为 "
"``pep-9999.rst``，如果你有，则命名为 ``pep-NNN.rst``。欢迎有推送权限的人申请下一个可用的号码（忽略特殊区块 "
"3000 和 8000，以及少量的特殊分配--目前是 666、754 和 801）并直接推送。"

#: ../../pep-0012.rst:70
msgid ""
"Replace the \"PEP: 12\" header with \"PEP: 9999\" or \"PEP: NNNN\", "
"matching the file name. Note that the file name should be padded with "
"zeros (eg ``pep-0012.rst``), but the header should not (``PEP: 12``)."
msgstr ""
"用 \"PEP: 9999\" 或 \"PEP: NNNN\" 替换 \"PEP: 12\" 头，以匹配文件名。请注意，文件名应该用零填充（例如 "
"``pep-0012.rst``），但文件头不应该（``PEP: 12``）。"

#: ../../pep-0012.rst:74
msgid "Change the Title header to the title of your PEP."
msgstr "将标题标题改为你的 PEP 的标题。"

#: ../../pep-0012.rst:76
msgid ""
"Change the Author header to include your name, and optionally your email "
"address.  Be sure to follow the format carefully: your name must appear "
"first, and it must not be contained in parentheses. Your email address "
"may appear second (or it can be omitted) and if it appears, it must "
"appear in angle brackets.  It is okay to obfuscate your email address."
msgstr "改变作者头像，包括你的名字，以及你的电子邮件地址，可以选择。请务必认真遵守格式：你的名字必须出现在第一位，而且不能包含在括号里。你的电子邮件地址可以出现在第二位（也可以省略），如果出现，必须出现在角括号内。混淆你的电子邮件地址也是可以的\""

#: ../../pep-0012.rst:83
msgid ""
"If none of the authors are Python core developers, include a Sponsor "
"header with the name of the core developer sponsoring your PEP."
msgstr "如果作者中没有人是 Python 的核心开发者，请包括一个赞助商的标题，其中包括赞助你的 PEP 的核心开发者的名字。"

#: ../../pep-0012.rst:86
msgid ""
"Add the direct URL of the PEP's canonical discussion thread (on e.g. "
"Python-Dev, Discourse, etc) under the Discussions-To header. If the "
"thread will be created after the PEP is submitted as an official draft, "
"it is okay to just list the venue name initially, but remember to update "
"the PEP with the URL as soon as the PEP is successfully merged to the "
"PEPs repository and you create the corresponding discussion thread. See "
":pep:`PEP 1 <1#discussing-a-pep>` for more details."
msgstr ""

#: ../../pep-0012.rst:94
msgid "Change the Status header to \"Draft\"."
msgstr "将状态头改为 \"Draft\"。"

#: ../../pep-0012.rst:96
msgid "For Standards Track PEPs, change the Type header to \"Standards Track\"."
msgstr "对于标准追踪 PEPs，将类型标题改为 \"Standards Track\"。"

#: ../../pep-0012.rst:99
msgid "For Informational PEPs, change the Type header to \"Informational\"."
msgstr "对于信息性 PEPs，将类型标题改为 \"Informational\"。"

#: ../../pep-0012.rst:101
msgid ""
"For Standards Track PEPs, if your feature depends on the acceptance of "
"some other currently in-development PEP, add a Requires header right "
"after the Type header.  The value should be the PEP number of the PEP "
"yours depends on.  Don't add this header if your dependent feature is "
"described in a Final PEP."
msgstr ""
"对于标准追踪 PEPs，如果你的功能取决于对其他正在开发的 PEP 的接受程度，请在 Type 头之后添加 Requires "
"头。其值应该是你所依赖的 PEP 的 PEP 编号。如果你所依赖的特性是在最终的 PEP 中描述的，就不要添加这个标头。"

#: ../../pep-0012.rst:107
msgid ""
"Change the Created header to today's date.  Be sure to follow the format "
"carefully: it must be in ``dd-mmm-yyyy`` format, where the ``mmm`` is the"
" 3 English letter month abbreviation, i.e. one of Jan, Feb, Mar, Apr, "
"May, Jun, Jul, Aug, Sep, Oct, Nov, Dec."
msgstr ""
"将 Created 标题改为今天的日期。一定要仔细遵守格式：必须是 ``dd-mmm-yyyy`` 格式，其中 ``mmm`` 是 3 "
"个英文字母的月份缩写，即 Jan, Feb, Mar, Apr, May, Jun, Jul, Aug, Sep, Oct, Nov, Dec "
"中的一个。"

#: ../../pep-0012.rst:112
#, fuzzy
msgid ""
"For Standards Track PEPs, after the Created header, add a Python-Version "
"header and set the value to the next planned version of Python, i.e. the "
"one your new feature will hopefully make its first appearance in.  Do not"
" use an alpha or beta release designation here.  Thus, if the last "
"version of Python was 2.2 alpha 1 and you're hoping to get your new "
"feature into Python 2.2, set the header to:"
msgstr ""
"对于标准追踪 PEPs，在 Created 标题之后，添加一个 Python-Version 标题，并将其值设置为 Python "
"的下一个计划版本，即你的新特性有希望在其中首次出现的版本。不要在这里使用 alpha 或 beta 版本的名称。因此，如果 Python "
"的最后一个版本是 2.2 alpha 1，而你希望把你的新特性放到 Python 2.2中，请把标题设置为 ::"

#: ../../pep-0012.rst:124
msgid ""
"Leave Post-History alone for now; you'll add dates and corresponding "
"links to this header each time you post your PEP to the designated "
"discussion forum (and update the Discussions-To header with said link, as"
" above). For each thread, use the date (in the ``dd-mmm-yyy`` format) as "
"the linked text, and insert the URLs inline as anonymous reST "
"`hyperlinks`_, with commas in between each posting."
msgstr ""

#: ../../pep-0012.rst:131
msgid ""
"If you posted threads for your PEP on August 14, 2001 and September 3, "
"2001, the Post-History header would look like, e.g.:"
msgstr ""

#: ../../pep-0012.rst:139
msgid ""
"You should add the new dates/links here as soon as you post a new "
"discussion thread."
msgstr ""

#: ../../pep-0012.rst:142
msgid ""
"Add a Replaces header if your PEP obsoletes an earlier PEP.  The value of"
" this header is the number of the PEP that your new PEP is replacing.  "
"Only add this header if the older PEP is in \"final\" form, i.e. is "
"either Accepted, Final, or Rejected.  You aren't replacing an older open "
"PEP if you're submitting a competing idea."
msgstr ""
"如果你的 PEP 淘汰了一个早期的 PEP，请添加一个 Replaces 头。这个头的值是你的新 PEP 所替代的 PEP的编号。 只有当较早的 "
"PEP 处于 \"final\" "
"形式时，即要么接受，要么最终确定，要么拒绝，才会添加这个标头。如果你提交的是一个竞争性的想法，那么你就不是在替换一个旧的开放性 PEP。"

#: ../../pep-0012.rst:148
msgid ""
"Now write your Abstract, Rationale, and other content for your PEP, "
"replacing all this gobbledygook with your own text. Be sure to adhere to "
"the format guidelines below, specifically on the prohibition of tab "
"characters and the indentation requirements. See \"Suggested Sections\" "
"below for a template of sections to include."
msgstr ""
"现在为你的 PEP "
"写出你的摘要、理由和其他内容，用你自己的文字取代所有这些胡言乱语的内容。请确保遵守下面的格式指南，特别是禁止使用制表符和缩进的要求。参见下面的 "
"“建议的章节”，以获得需要包括的章节模板。"

#: ../../pep-0012.rst:154
msgid ""
"Update your Footnotes section, listing any footnotes and non-inline link "
"targets referenced by the text."
msgstr ""

#: ../../pep-0012.rst:157
msgid ""
"Run ``./build.py`` to ensure the PEP is rendered without errors, and "
"check that the output in ``build/pep-9999.html`` looks as you intend."
msgstr ""

#: ../../pep-0012.rst:160
#, fuzzy
msgid "Create a pull request against the `PEPs repository`_."
msgstr "针对 https://github.com/python/peps 仓库创建一个拉取请求。"

#: ../../pep-0012.rst:162
#, fuzzy
msgid ""
"For reference, here are all of the possible header fields (everything in "
"brackets should either be replaced or have the field removed if it has a "
"leading ``*`` marking it as optional and it does not apply to your PEP):"
msgstr ""
"作为参考，以下是所有可能的头文件字段（括号内的所有字段都应该被替换掉，或者删除该字段，如果它有一个领先的 ``*`` "
"标记为可选字段，并且不适用于你的PEP） ::"

#: ../../pep-0012.rst:188
msgid "ReStructuredText PEP Formatting Requirements"
msgstr "ReStructuredText PEP 格式化要求"

#: ../../pep-0012.rst:190
msgid ""
"The following is a PEP-specific summary of reStructuredText syntax. For "
"the sake of simplicity and brevity, much detail is omitted.  For more "
"detail, see `Resources`_ below.  `Literal blocks`_ (in which no markup "
"processing is done) are used for examples throughout, to illustrate the "
"plaintext markup."
msgstr ""
"下面是一个针对 PEP 的 reStructuredText 语法的总结。为了简单明了，我们省略了很多细节。更多细节请参见下面的 "
"`Resources`_ 。在整个例子中使用了 `Literal blocks`_ （其中没有进行标记处理），以说明纯文本标记"

#: ../../pep-0012.rst:198
msgid "General"
msgstr "通用"

#: ../../pep-0012.rst:200
msgid ""
"Lines should usually not extend past column 79, excepting URLs and "
"similar circumstances. Tab characters must never appear in the document "
"at all."
msgstr ""

#: ../../pep-0012.rst:206
msgid "Section Headings"
msgstr "节标题"

#: ../../pep-0012.rst:208
msgid ""
"PEP headings must begin in column zero and the initial letter of each "
"word must be capitalized as in book titles.  Acronyms should be in all "
"capitals.  Section titles must be adorned with an underline, a single "
"repeated punctuation character, which begins in column zero and must "
"extend at least as far as the right edge of the title text (4 characters "
"minimum).  First-level section titles are underlined with \"=\" (equals "
"signs), second-level section titles with \"-\" (hyphens), and third-level"
" section titles with \"'\" (single quotes or apostrophes).  For example::"
msgstr ""
"PEP 的标题必须在第 0 "
"栏开始，每个词的首字母必须像书名一样大写。首字母缩写应使用全大写。章节标题必须用下划线装饰，这是一个重复的标点符号，从第 0 "
"栏开始，必须至少延伸到标题文本的右边缘（最少 4 个字符）。一级标题下划线为 \"=\"（等号），二级标题用 \"-\"（连字符），三级标题用 "
"\"'\"（单引号或撇号）。 例如 ::"

#: ../../pep-0012.rst:227
msgid ""
"If there are more than three levels of sections in your PEP, you may "
"insert overline/underline-adorned titles for the first and second levels "
"as follows::"
msgstr "如果你的 PEP 中有超过三层的章节，你可以为第一层和第二层插入下划线/下划线装饰的标题，如下 ::"

#: ../../pep-0012.rst:248
msgid ""
"You shouldn't have more than five levels of sections in your PEP.  If you"
" do, you should consider rewriting it."
msgstr "你的 PEP 中不应该有超过五级的章节。如果你有，你应该考虑重写它。"

#: ../../pep-0012.rst:251
msgid ""
"You must use two blank lines between the last line of a section's body "
"and the next section heading.  If a subsection heading immediately "
"follows a section heading, a single blank line in-between is sufficient."
msgstr "你必须在一节正文的最后一行和下一节标题之间使用两个空行。如果一个小节的标题紧随一个章节的标题之后，中间只需一个空行即可。"

#: ../../pep-0012.rst:256
msgid ""
"The body of each section is not normally indented, although some "
"constructs do use indentation, as described below.  Blank lines are used "
"to separate constructs."
msgstr "每一节的主体通常不缩进，尽管有些结构体确实使用缩进，如下所述。空行是用来分隔结构体的。"

#: ../../pep-0012.rst:262
msgid "Paragraphs"
msgstr "段落"

#: ../../pep-0012.rst:264
msgid ""
"Paragraphs are left-aligned text blocks separated by blank lines. "
"Paragraphs are not indented unless they are part of an indented construct"
" (such as a block quote or a list item)."
msgstr "段落是左对齐的文本块，由空行分隔。段落不缩进，除非它们是缩进结构的一部分（如引用块或列表项）。"

#: ../../pep-0012.rst:270
msgid "Inline Markup"
msgstr "行内标记"

#: ../../pep-0012.rst:272
msgid ""
"Portions of text within paragraphs and other text blocks may be styled.  "
"For example::"
msgstr "段落和其他文本块中的部分文本可以被定型。 例如 ::"

#: ../../pep-0012.rst:284
msgid "Block Quotes"
msgstr "块引用"

#: ../../pep-0012.rst:286
msgid "Block quotes consist of indented body elements.  For example::"
msgstr "段落和其他文本块中的部分文本可以被定型。 例如 ::"

#: ../../pep-0012.rst:294
msgid ""
"Block quotes are used to quote extended passages from other sources. "
"Block quotes may be nested inside other body elements.  Use 4 spaces per "
"indent level."
msgstr "方块引号用于引用其他来源的扩展段落。区块引号可以嵌套在其他主体元素中。每个缩进级别使用 4 个空格。"

#: ../../pep-0012.rst:300
msgid "Literal Blocks"
msgstr ""

#: ../../pep-0012.rst:310
msgid ""
"Literal blocks are used for code samples and other preformatted text. To "
"indicate a literal block, preface the indented text block with \"``::``\""
" (two colons), or use the ``.. code-block::`` directive. Indent the text "
"block by 4 spaces; the literal block continues until the end of the "
"indentation. For example::"
msgstr ""

#: ../../pep-0012.rst:324
msgid ""
"\"``::``\" is also recognized at the end of any paragraph; if not "
"immediately preceded by whitespace, one colon will remain visible in the "
"final output::"
msgstr ""

#: ../../pep-0012.rst:331
msgid ""
"By default, literal blocks will be syntax-highlighted as Python code. For"
" specific blocks that contain code or data in other languages/formats, "
"use the ``.. code-block:: language`` directive, substituting the \"short "
"name\" of the appropriate `Pygments lexer "
"<https://pygments.org/docs/lexers/>`_ (or ``text`` to disable "
"highlighting) for ``language``. For example::"
msgstr ""

#: ../../pep-0012.rst:341
msgid ""
"For PEPs that predominantly contain literal blocks of a specific "
"language, use the ``.. highlight:: language`` directive with the "
"appropriate ``language`` at the top of the PEP body (below the headers "
"and above the Abstract). All literal blocks will then be treated as that "
"language, unless specified otherwise in the specific ``.. code-block``. "
"For example::"
msgstr ""

#: ../../pep-0012.rst:358
msgid "Lists"
msgstr ""

#: ../../pep-0012.rst:360
msgid ""
"Bullet list items begin with one of \"-\", \"*\", or \"+\" (hyphen, "
"asterisk, or plus sign), followed by whitespace and the list item body.  "
"List item bodies must be left-aligned and indented relative to the "
"bullet; the text immediately after the bullet determines the indentation."
"  For example::"
msgstr ""

#: ../../pep-0012.rst:387
msgid ""
"Enumerated (numbered) list items are similar, but use an enumerator "
"instead of a bullet.  Enumerators are numbers (1, 2, 3, ...), letters (A,"
" B, C, ...; uppercase or lowercase), or Roman numerals (i, ii, iii, iv, "
"...; uppercase or lowercase), formatted with a period suffix (\"1.\", "
"\"2.\"), parentheses (\"(1)\", \"(2)\"), or a right-parenthesis suffix "
"(\"1)\", \"2)\").  For example::"
msgstr ""

#: ../../pep-0012.rst:404
msgid "Definition lists are written like this::"
msgstr ""

#: ../../pep-0012.rst:416
msgid "Tables"
msgstr ""

#: ../../pep-0012.rst:418
msgid "Simple tables are easy and compact::"
msgstr ""

#: ../../pep-0012.rst:429
msgid ""
"There must be at least two columns in a table (to differentiate from "
"section titles).  Column spans use underlines of hyphens (\"Inputs\" "
"spans the first two columns)::"
msgstr ""

#: ../../pep-0012.rst:444
msgid ""
"Text in a first-column cell starts a new row.  No text in the first "
"column indicates a continuation line; the rest of the cells may consist "
"of multiple lines.  For example::"
msgstr ""

#: ../../pep-0012.rst:462
msgid "Hyperlinks"
msgstr ""

#: ../../pep-0012.rst:464
msgid ""
"When referencing an external web page in the body of a PEP, you should "
"include the title of the page or a suitable description in the text, with"
" either an inline hyperlink or a separate explicit target with the URL. "
"Do not include bare URLs in the body text of the PEP, and use HTTPS links"
" wherever available."
msgstr ""

#: ../../pep-0012.rst:470
msgid ""
"Hyperlink references use backquotes and a trailing underscore to mark up "
"the reference text; backquotes are optional if the reference text is a "
"single word.  For example, to reference a hyperlink target named ``Python"
" website``, you would write:"
msgstr ""

#: ../../pep-0012.rst:479
msgid ""
"If you intend to only reference a link once, and want to define it inline"
" with the text, insert the link into angle brackets (``<>``) after the "
"text you want to link, but before the closing backtick, with a space "
"between the text and the opening backtick. You should also use a double-"
"underscore after the closing backtick instead of a single one, which "
"makes it an anonymous reference to avoid conflicting with other target "
"names. For example:"
msgstr ""

#: ../../pep-0012.rst:490
msgid ""
"If you want to use one link multiple places with different linked text, "
"or want to ensure you don't have to update your link target names when "
"changing the linked text, include the target name within angle brackets "
"following the text to link, *with an underscore after the target name but"
" before the closing angle bracket* (or the link **will not work**). For "
"example:"
msgstr ""

#: ../../pep-0012.rst:501
msgid ""
"An explicit target provides the URL.  Put targets in the Footnotes "
"section at the end of the PEP, or immediately after the paragraph with "
"the reference. Hyperlink targets begin with two periods and a space (the "
"\"explicit markup start\"), followed by a leading underscore, the "
"reference text, a colon, and the URL."
msgstr ""

#: ../../pep-0012.rst:512
msgid ""
"The reference text and the target text must match (although the match is "
"case-insensitive and ignores differences in whitespace).  Note that the "
"underscore trails the reference text but precedes the target text. If you"
" think of the underscore as a right-pointing arrow, it points *away* from"
" the reference and *toward* the target."
msgstr ""

#: ../../pep-0012.rst:520
msgid "Internal and PEP/RFC Links"
msgstr ""

#: ../../pep-0012.rst:522
msgid ""
"The same mechanism as hyperlinks can be used for internal references. "
"Every unique section title implicitly defines an internal hyperlink "
"target. We can make a link to the Abstract section like this:"
msgstr ""

#: ../../pep-0012.rst:532
msgid ""
"To refer to PEPs or RFCs, always use the ``:pep:`` and ``:rfc:`` roles, "
"never hardcoded URLs. For example:"
msgstr ""

#: ../../pep-0012.rst:541
msgid "This renders as:"
msgstr ""

#: ../../pep-0012.rst:543
msgid ""
"See :pep:`1` for more information on how to write a PEP, and :pep:`the "
"Hyperlink section of PEP 12 <12#hyperlinks>` for how to link."
msgstr ""

#: ../../pep-0012.rst:546
msgid ""
"PEP numbers in the text are never padded, and there is a space (not a "
"dash) between \"PEP\" or \"RFC\" and the number; the above roles will "
"take care of that for you."
msgstr ""

#: ../../pep-0012.rst:552
msgid "Footnotes"
msgstr ""

#: ../../pep-0012.rst:554
msgid ""
"Footnote references consist of a left square bracket, a label, a right "
"square bracket, and a trailing underscore. Instead of a number, use a "
"label of the form \"#word\", where \"word\" is a mnemonic consisting of "
"alphanumerics plus internal hyphens, underscores, and periods (no "
"whitespace or other characters are allowed). For example:"
msgstr ""

#: ../../pep-0012.rst:566 ../../pep-0012.rst:586
msgid "which renders as"
msgstr ""

#: ../../pep-0012.rst:568
msgid "Refer to The TeXbook [#TeXbook]_ for more information."
msgstr ""

#: ../../pep-0012.rst:570
msgid ""
"Whitespace must precede the footnote reference.  Leave a space between "
"the footnote reference and the preceding word."
msgstr ""

#: ../../pep-0012.rst:573
msgid ""
"Use footnotes for additional notes, explanations and caveats, as well as "
"for references to books and other sources not readily available online. "
"Native reST hyperlink targets or inline hyperlinks in the text should be "
"used in preference to footnotes for including URLs to online resources."
msgstr ""

#: ../../pep-0012.rst:578
msgid ""
"Footnotes begin with \".. \" (the explicit markup start), followed by the"
" footnote marker (no underscores), followed by the footnote body.  For "
"example:"
msgstr ""

#: ../../pep-0012.rst:588
msgid "Donald Knuth's *The TeXbook*, pages 195 and 196."
msgstr ""

#: ../../pep-0012.rst:590
msgid ""
"Footnotes and footnote references will be numbered automatically, and the"
" numbers will always match."
msgstr ""

#: ../../pep-0012.rst:595
msgid "Images"
msgstr ""

#: ../../pep-0012.rst:597
msgid ""
"If your PEP contains a diagram or other graphic, you may include it in "
"the processed output using the ``image`` directive:"
msgstr ""

#: ../../pep-0012.rst:604
msgid ""
"Any browser-friendly graphics format is possible; PNG should be preferred"
" for graphics, JPEG for photos and GIF for animations. Currently, SVG "
"must be avoided due to compatibility issues with the PEP build system."
msgstr ""

#: ../../pep-0012.rst:609
msgid ""
"For accessibility and readers of the source text, you should include a "
"description of the image and any key information contained within using "
"the ``:alt:`` option to the ``image`` directive:"
msgstr ""

#: ../../pep-0012.rst:621
msgid "Comments"
msgstr ""

#: ../../pep-0012.rst:623
msgid ""
"A comment is an indented block of arbitrary text immediately following an"
" explicit markup start: two periods and whitespace.  Leave the \"..\" on "
"a line by itself to ensure that the comment is not misinterpreted as "
"another explicit markup construct.  Comments are not visible in the "
"processed document.  For example:"
msgstr ""

#: ../../pep-0012.rst:637
msgid "Escaping Mechanism"
msgstr ""

#: ../../pep-0012.rst:639
msgid ""
"reStructuredText uses backslashes (\"``\\``\") to override the special "
"meaning given to markup characters and get the literal characters "
"themselves.  To get a literal backslash, use an escaped backslash "
"(\"``\\\\``\").  There are two contexts in which backslashes have no "
"special meaning: `literal blocks`_ and inline literals (see `Inline "
"Markup`_ above).  In these contexts, no markup recognition is done, and a"
" single backslash represents a literal backslash, without having to "
"double up."
msgstr ""

#: ../../pep-0012.rst:648
msgid ""
"If you find that you need to use a backslash in your text, consider using"
" inline literals or a literal block instead."
msgstr ""

#: ../../pep-0012.rst:653
msgid "Canonical Documentation and Intersphinx"
msgstr ""

#: ../../pep-0012.rst:655
msgid ""
"As :pep:`PEP 1 describes <1#pep-maintenance>`, PEPs are considered "
"historical documents once marked Final, and their canonical "
"documentation/specification should be moved elsewhere. To indicate this, "
"use the ``canonical-docs`` directive or an appropriate subclass "
"(currently ``canonical-pypa-spec`` for packaging standards)."
msgstr ""

#: ../../pep-0012.rst:662
msgid ""
"Furthermore, you can use `Intersphinx references <https://www.sphinx-"
"doc.org/en/master/usage/extensions/intersphinx.html>`_ to other Sphinx "
"sites, currently the `Python documentation <https://docs.python.org/>`_ "
"and `packaging.python.org <https://packaging.python.org/>`_, to easily "
"cross-reference pages, sections and Python/C objects. This works with "
"both the \"canonical\" directives and anywhere in your PEP."
msgstr ""

#: ../../pep-0012.rst:671
msgid ""
"Add the directive between the headers and the first section of the PEP "
"(typically the Abstract) and pass as an argument an Intersphinx reference"
" of the canonical doc/spec (or if the target is not on a Sphinx site, a "
"`reST hyperlink <Hyperlinks_>`__)."
msgstr ""

#: ../../pep-0012.rst:676
msgid ""
"For example, to create a banner pointing to the :mod:`python:sqlite3` "
"docs, you would write the following::"
msgstr ""

#: ../../pep-0012.rst:682
msgid "which would generate the banner:"
msgstr ""

#: ../../pep-0012.rst:686
msgid ""
"Or for a PyPA spec, such as the :ref:`packaging:core-metadata`, you would"
" use::"
msgstr ""

#: ../../pep-0012.rst:692
msgid "which renders as:"
msgstr ""

#: ../../pep-0012.rst:696
msgid ""
"The argument accepts arbitrary reST, so you can include multiple linked "
"docs/specs and name them whatever you like, and you can also include "
"directive content that will be inserted into the text. The following "
"advanced example::"
msgstr ""

#: ../../pep-0012.rst:705
msgid "would render as:"
msgstr ""

#: ../../pep-0012.rst:709
msgid ""
"Also, see the :ref:`Data Persistence docs <persistence>` for other "
"examples."
msgstr ""

#: ../../pep-0012.rst:713
msgid "Habits to Avoid"
msgstr ""

#: ../../pep-0012.rst:715
msgid ""
"Many programmers who are familiar with TeX often write quotation marks "
"like this:"
msgstr ""

#: ../../pep-0012.rst:722
msgid ""
"Backquotes are significant in reStructuredText, so this practice should "
"be avoided.  For ordinary text, use ordinary 'single-quotes' or \"double-"
"quotes\".  For inline literal text (see `Inline Markup`_ above), use "
"double-backquotes::"
msgstr ""

#: ../../pep-0012.rst:731
msgid "Suggested Sections"
msgstr ""

#: ../../pep-0012.rst:733
msgid ""
"Various sections are found to be common across PEPs and are outlined in "
":pep:`1`. Those sections are provided here for convenience."
msgstr ""

#: ../../pep-0012.rst:743
msgid "Resources"
msgstr ""

#: ../../pep-0012.rst:745
msgid ""
"Many other constructs and variations are possible, both those supported "
"by basic `Docutils <https://docutils.sourceforge.io/>`_ and the "
"extensions added by `Sphinx <https://www.sphinx-doc.org/>`_."
msgstr ""

#: ../../pep-0012.rst:749
msgid "A number of resources are available to learn more about them:"
msgstr ""

#: ../../pep-0012.rst:751
msgid ""
"`Sphinx ReStructuredText Primer <https://www.sphinx-"
"doc.org/en/master/usage/restructuredtext/basics.html>`_, a gentle but "
"fairly detailed introduction."
msgstr ""

#: ../../pep-0012.rst:755
msgid ""
"`reStructuredText Markup Specification "
"<https://docutils.sourceforge.io/docs/ref/rst/restructuredtext.html>`_, "
"the authoritative, comprehensive documentation of the basic reST syntax, "
"directives, roles and more."
msgstr ""

#: ../../pep-0012.rst:760
msgid ""
"`Sphinx Roles <https://www.sphinx-"
"doc.org/en/master/usage/restructuredtext/roles.html>`_ and `Sphinx "
"Directives <https://www.sphinx-"
"doc.org/en/master/usage/restructuredtext/directives.html>`_, the extended"
" constructs added by the Sphinx documentation system used to render the "
"PEPs to HTML."
msgstr ""

#: ../../pep-0012.rst:767
msgid ""
"If you have questions or require assistance with writing a PEP that the "
"above resources don't address, ping ``@python/pep-editors`` on GitHub, "
"open an `issue on the PEPs repository "
"<https://github.com/python/peps/issues>`_ or reach out to a PEP editor "
"directly."
msgstr ""

#: ../../pep-0012.rst:774
msgid "Copyright"
msgstr ""

#: ../../pep-0012.rst:776
msgid ""
"This document is placed in the public domain or under the "
"CC0-1.0-Universal license, whichever is more permissive."
msgstr ""

#~ msgid "PEP"
#~ msgstr ""

#~ msgid "12"
#~ msgstr ""

#~ msgid "Title"
#~ msgstr ""

#~ msgid "Sample reStructuredText PEP Template"
#~ msgstr "reStructuredText PEP 模板样本"

#~ msgid "30-Aug-2002"
#~ msgstr ""

#~ msgid ""
#~ "For many PEPs, discussions will take "
#~ "place on python-ideas@python.org and/or "
#~ "python-dev@python.org. If there is another"
#~ " mailing list or public forum more"
#~ " appropriate for discussion of your "
#~ "new feature, add a Discussions-To "
#~ "header right after the Author header."
#~ " Most Informational PEPs don't need a"
#~ " Discussions-To header."
#~ msgstr ""
#~ "对于许多 PEPs，讨论将在 python-ideas@python.org 和/或 "
#~ "python-"
#~ "dev@python.org。如果有另一个邮件列表或公共论坛更适合讨论你的新特性，请在作者标题之后添加一个讨论-对象的标题。大多数信息性的"
#~ " PEP 不需要讨论到标题。"

#~ msgid ""
#~ "Leave Post-History alone for now; "
#~ "you'll add dates to this header "
#~ "each time you post your PEP to "
#~ "the designated discussion forum (see the"
#~ " Discussions-To header above). If you"
#~ " posted your PEP to the lists "
#~ "on August 14, 2001 and September "
#~ "3, 2001, the Post-History header "
#~ "would look like::"
#~ msgstr ""
#~ "暂时不要管 Post-History；你将在每次将你的 PEP 发布到指定的讨论区（见上面的"
#~ " Discussions-To header）时在这个标题上添加日期。如果你在 2001 "
#~ "年 8 月 14 日和 2001 年 9 月"
#~ " 3 日将你的 PEP 发布到列表中，那么 Post-History"
#~ " 的标题将是 ::"

#~ msgid ""
#~ "You must manually add new dates "
#~ "and commit them (with a pull "
#~ "request if you don't have push "
#~ "privileges)."
#~ msgstr "你必须手动添加新的日期并提交它们（如果你没有推送权限，就用拉取请求）。"

#~ msgid ""
#~ "Update your References and Copyright "
#~ "section.  Usually you'll place your PEP"
#~ " into the public domain, in which "
#~ "case just leave the Copyright section"
#~ " alone.  Alternatively, you can use "
#~ "the `Open Publication License`__, but "
#~ "public domain is still strongly "
#~ "preferred."
#~ msgstr ""
#~ "更新你的参考文献和版权部分。通常你会把你的 PEP 放入公共领域，在这种情况下，只需留下版权部分。另外，你也可以使用"
#~ " `公开出版许可证`__，但还是强烈建议使用公有领域。"

#~ msgid ""
#~ "Leave the Emacs stanza at the end"
#~ " of this file alone, including the"
#~ " formfeed character (\"^L\", or ``\\f``)."
#~ msgstr "让这个文件结尾的 Emacs 句子单独存在，包括 formfeed 字符（\"^L\"，或 ``\\f``）。"

#~ msgid ""
#~ "You must adhere to the Emacs "
#~ "convention of adding two spaces at "
#~ "the end of every sentence.  You "
#~ "should fill your paragraphs to column"
#~ " 70, but under no circumstances "
#~ "should your lines extend past column "
#~ "79. If your code samples spill "
#~ "over column 79, you should rewrite "
#~ "them."
#~ msgstr ""
#~ "你必须遵守 Emacs 的惯例，在每句话的末尾加两个空格。你应该把你的段落填到第 70 "
#~ "栏，但在任何情况下，你的行都不能超过第 79 栏。如果你的代码样本超过了第 79 "
#~ "栏，你应该重写。"

#~ msgid ""
#~ "Tab characters must never appear in "
#~ "the document at all.  A PEP should"
#~ " include the standard Emacs stanza "
#~ "included by example at the bottom "
#~ "of this PEP."
#~ msgstr "Tab 字符绝对不能出现在文件中。PEP 应该包括本 PEP 底部举例的标准 Emacs 句子。"

#~ msgid ""
#~ "Literal blocks are used for code "
#~ "samples or preformatted ASCII art. To"
#~ " indicate a literal block, preface "
#~ "the indented text block with \"``::``\""
#~ " (two colons).  The literal block "
#~ "continues until the end of the "
#~ "indentation.  Indent the text block by"
#~ " 4 spaces.  For example::"
#~ msgstr ""

#~ msgid ""
#~ "The paragraph containing only \"``::``\" "
#~ "will be completely removed from the "
#~ "output; no empty paragraph will remain."
#~ "  \"``::``\" is also recognized at "
#~ "the end of any paragraph.  If "
#~ "immediately preceded by whitespace, both "
#~ "colons will be removed from the "
#~ "output.  When text immediately precedes "
#~ "the \"``::``\", *one* colon will be "
#~ "removed from the output, leaving only"
#~ " one colon visible (i.e., \"``::``\" "
#~ "will be replaced by \"``:``\").  For "
#~ "example, one colon will remain visible"
#~ " here::"
#~ msgstr ""

#~ msgid ""
#~ "When referencing an external web page"
#~ " in the body of a PEP, you "
#~ "should include the title of the "
#~ "page in the text, with either an"
#~ " inline hyperlink reference to the "
#~ "URL or a footnote reference (see "
#~ "`Footnotes`_ below).  Do not include the"
#~ " URL in the body text of the"
#~ " PEP."
#~ msgstr ""

#~ msgid ""
#~ "Hyperlink references use backquotes and "
#~ "a trailing underscore to mark up "
#~ "the reference text; backquotes are "
#~ "optional if the reference text is "
#~ "a single word.  For example::"
#~ msgstr ""

#~ msgid ""
#~ "An explicit target provides the URL."
#~ "  Put targets in a References section"
#~ " at the end of the PEP, or "
#~ "immediately after the reference. Hyperlink "
#~ "targets begin with two periods and "
#~ "a space (the \"explicit markup start\"),"
#~ " followed by a leading underscore, "
#~ "the reference text, a colon, and "
#~ "the URL (absolute or relative)::"
#~ msgstr ""

#~ msgid ""
#~ "The same mechanism can be used for"
#~ " internal references.  Every unique section"
#~ " title implicitly defines an internal "
#~ "hyperlink target.  We can make a "
#~ "link to the Abstract section like "
#~ "this::"
#~ msgstr ""

#~ msgid ""
#~ "Footnotes containing the URLs from "
#~ "external targets will be generated "
#~ "automatically at the end of the "
#~ "References section of the PEP, along "
#~ "with footnote references linking the "
#~ "reference text to the footnotes."
#~ msgstr ""

#~ msgid ""
#~ "Text of the form \"PEP x\" or "
#~ "\"RFC x\" (where \"x\" is a "
#~ "number) will be linked automatically to"
#~ " the appropriate URLs."
#~ msgstr ""

#~ msgid ""
#~ "Footnote references consist of a left"
#~ " square bracket, a number, a right"
#~ " square bracket, and a trailing "
#~ "underscore::"
#~ msgstr ""

#~ msgid ""
#~ "When referring to another PEP, include"
#~ " the PEP number in the body "
#~ "text, such as \"PEP 1\".  The "
#~ "title may optionally appear.  Add a "
#~ "footnote reference following the title.  "
#~ "For example::"
#~ msgstr ""

#~ msgid ""
#~ "Add a footnote that includes the "
#~ "PEP's title and author.  It may "
#~ "optionally include the explicit URL on"
#~ " a separate line, but only in "
#~ "the References section.  Footnotes begin "
#~ "with \".. \" (the explicit markup "
#~ "start), followed by the footnote marker"
#~ " (no underscores), followed by the "
#~ "footnote body.  For example::"
#~ msgstr ""

#~ msgid ""
#~ "If you decide to provide an "
#~ "explicit URL for a PEP, please use"
#~ " this as the URL template::"
#~ msgstr ""

#~ msgid ""
#~ "PEP numbers in URLs must be padded"
#~ " with zeros from the left, so "
#~ "as to be exactly 4 characters "
#~ "wide; however, PEP numbers in the "
#~ "text are never padded."
#~ msgstr ""

#~ msgid ""
#~ "During the course of developing your "
#~ "PEP, you may have to add, remove,"
#~ " and rearrange footnote references, "
#~ "possibly resulting in mismatched references,"
#~ " obsolete footnotes, and confusion.  "
#~ "Auto-numbered footnotes allow more freedom."
#~ "  Instead of a number, use a "
#~ "label of the form \"#word\", where "
#~ "\"word\" is a mnemonic consisting of "
#~ "alphanumerics plus internal hyphens, "
#~ "underscores, and periods (no whitespace "
#~ "or other characters are allowed).  For"
#~ " example::"
#~ msgstr ""

#~ msgid ""
#~ "Footnotes and footnote references will "
#~ "be numbered automatically, and the "
#~ "numbers will always match.  Once a "
#~ "PEP is finalized, auto-numbered labels"
#~ " should be replaced by numbers for"
#~ " simplicity."
#~ msgstr ""

#~ msgid ""
#~ "If your PEP contains a diagram, "
#~ "you may include it in the "
#~ "processed output using the \"image\" "
#~ "directive::"
#~ msgstr ""

#~ msgid ""
#~ "Any browser-friendly graphics format is"
#~ " possible: .png, .jpeg, .gif, .tiff, "
#~ "etc."
#~ msgstr ""

#~ msgid ""
#~ "Since this image will not be "
#~ "visible to readers of the PEP in"
#~ " source text form, you should "
#~ "consider including a description or "
#~ "ASCII art alternative, using a comment"
#~ " (below)."
#~ msgstr ""

#~ msgid ""
#~ "A comment block is an indented "
#~ "block of arbitrary text immediately "
#~ "following an explicit markup start: two"
#~ " periods and whitespace.  Leave the "
#~ "\"..\" on a line by itself to "
#~ "ensure that the comment is not "
#~ "misinterpreted as another explicit markup "
#~ "construct.  Comments are not visible in"
#~ " the processed document.  For the "
#~ "benefit of those reading your PEP "
#~ "in source form, please consider "
#~ "including a descriptions of or ASCII "
#~ "art alternatives to any images you "
#~ "include.  For example::"
#~ msgstr ""

#~ msgid "The Emacs stanza at the bottom of this document is inside a comment."
#~ msgstr ""

#~ msgid ""
#~ "Many programmers who are familiar with"
#~ " TeX often write quotation marks like"
#~ " this::"
#~ msgstr ""

#~ msgid ""
#~ "Various sections are found to be "
#~ "common across PEPs and are outlined "
#~ "in PEP 1 [1]_. Those sections are"
#~ " provided here for convenience."
#~ msgstr ""

#~ msgid ""
#~ "Many other constructs and variations are"
#~ " possible.  For more details about "
#~ "the reStructuredText markup, in increasing "
#~ "order of thoroughness, please see:"
#~ msgstr ""

#~ msgid "`A ReStructuredText Primer`__, a gentle introduction."
#~ msgstr ""

#~ msgid "`Quick reStructuredText`__, a users' quick reference."
#~ msgstr ""

#~ msgid "`reStructuredText Markup Specification`__, the final authority."
#~ msgstr ""

#~ msgid ""
#~ "The processing of reStructuredText PEPs "
#~ "is done using Docutils_.  If you "
#~ "have a question or require assistance"
#~ " with reStructuredText or Docutils, please"
#~ " `post a message`_ to the "
#~ "`Docutils-users mailing list`_.  The "
#~ "`Docutils project web site`_ has more"
#~ " information."
#~ msgstr ""

#~ msgid "References"
#~ msgstr ""

#~ msgid ""
#~ "PEP 1, PEP Purpose and Guidelines, "
#~ "Warsaw, Hylton (http://www.python.org/dev/peps/pep-0001)"
#~ msgstr ""

